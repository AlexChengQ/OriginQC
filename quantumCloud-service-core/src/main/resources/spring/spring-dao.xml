<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context" 
	xsi:schemaLocation="
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">
		<context:property-placeholder location="classpath:jdbc.properties" ignore-unresolvable="true"/>
		<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		
      	<property name="initialSize" value="${jdbc.initialSize}" />
      	<property name="minIdle" value="${jdbc.minIdle}" /> 
      	<property name="maxActive" value="${jdbc.maxActive}" />

      	<property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" />
      	<property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}" />
      	
      	<property name="validationQuery" value="${jdbc.validationQuery}" />  
        <property name="testWhileIdle" value="${jdbc.testWhileIdle}" />  
        <property name="testOnBorrow" value="${jdbc.testOnBorrow}" />  
        <property name="testOnReturn" value="${jdbc.testOnReturn}" />  
        <property name="maxOpenPreparedStatements" value="${jdbc.maxOpenPreparedStatements}" />  
        <property name="removeAbandoned" value="${jdbc.removeAbandoned}" />
        <property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}" />
        <property name="logAbandoned" value="${jdbc.logAbandoned}" />
        
      	<property name="filters" value="${jdbc.filtes}" />
		<property name="connectionInitSqls" value="set names utf8mb4;"/>
	</bean>
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager"/>

	<!-- 配置SqlSessionFactoryBean -->
    <!-- <bean id="mySqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"> -->
    <bean id="mySqlSessionFactory" class="com.likegene.framework.core.mybatis.RefreshableSqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <property name="typeAliasesPackage" value="com.bylz.quantumCloud.model" />
		<!-- mapper和resultmap配置路径 -->
        <property name="mapperLocations" value="classpath*:mapper/*.xml">
        </property>
    </bean>
    
    <!-- 通过扫描的模式，扫描目录在net/sf/ssi/mapper目录下，所有的mapper都继承SqlMapper接口的接口， 这样一个bean就可以了 -->
    <bean id="sessionTemplate" class="org.mybatis.spring.SqlSessionTemplate"> 
	    <constructor-arg index="0" ref="mySqlSessionFactory"/>
    </bean>
    
</beans>
